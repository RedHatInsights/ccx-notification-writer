# Copyright 2021 Red Hat, Inc
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

language: go
go:
- "1.17"

jobs:
  include:
    - stage: build
      script:
        - go build
    - stage: style
      script:
        - ./gofmt.sh
        - ./govet.sh
        - ./golint.sh
        - ./gocyclo.sh
        - ./goerrcheck.sh
        - ./goconst.sh
        - ./gosec.sh
        - ./abcgo.sh
        - ./ineffassign.sh
        - ./shellcheck.sh
    - stage: unit tests
      before_script: go build
      script:
        - env
        - go test -coverprofile coverage.out $(go list ./... | grep -v tests)
        - go tool cover -func=coverage.out
      after_success:
        - bash <(curl -s https://codecov.io/bash)
    - stage: bdd tests
      services:
        - docker
      before_script:
        - go build
        - wget -O docker-compose.yml https://raw.githubusercontent.com/RedHatInsights/insights-behavioral-spec/main/docker-compose.yml
        - POSTGRES_DB_NAME=notification docker-compose --profile test-notification-services up -d
        - cid=$(docker ps | grep 'insights-behavioral-spec:ci' | cut -d ' ' -f 1)
        - docker cp ccx-notification-writer $cid:`docker exec $cid bash -c 'echo "$VIRTUAL_ENV_BIN"'`
        - docker exec -u root $cid /bin/bash -c 'chmod +x $VIRTUAL_ENV_BIN/ccx-notification-writer'
      script:
        - docker exec -it $cid /bin/bash -c 'export DB_NAME=notification CCX_NOTIFICATION_WRITER__STORAGE__DB_DRIVER=postgres CCX_NOTIFICATION_WRITER__STORAGE__PG_PARAMS=$DB_PARAMS CCX_NOTIFICATION_WRITER__STORAGE__PG_USERNAME=$DB_USER CCX_NOTIFICATION_WRITER__STORAGE__PG_PASSWORD=$DB_PASS CCX_NOTIFICATION_WRITER__STORAGE__PG_HOST=$DB_HOST CCX_NOTIFICATION_WRITER__STORAGE__PG_PORT=$DB_PORT CCX_NOTIFICATION_WRITER__STORAGE__PG_DB_NAME=notification CCX_NOTIFICATION_WRITER__BROKER__ADDRESS="$KAFKA_HOST:$KAFKA_PORT" CCX_NOTIFICATION_WRITER__BROKER__TOPIC=ccx.ocp.results CCX_NOTIFICATION_WRITER__BROKER__GROUP=test-consumer-group CCX_NOTIFICATION_WRITER__BROKER__ENABLED=true CCX_NOTIFICATION_WRITER__METRICS__NAMESPACE=notification-writer CCX_NOTIFICATION_WRITER__METRICS__ADDRESS=":8080"  && env && make notification-writer'

stages:
  - build
  - style
  - unit tests
  - bdd tests

